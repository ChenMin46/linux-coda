#! /usr/bin/perl

use Getopt::Long;

GetOptions("release=s" => \$release, "version=s" => \$version);

if ( ! $release || ! $version ) {
    print "Usage $0 --release=release --version=version\n";
    exit 1;
}


if ( ! -f "config.out" ) {
  print "You must first run make config.\n";
  exit 1;
}


$kernel = `grep UTS_RELEASE config.out`;
chop $kernel;

$kernel =~ s/UTS_RELEASE="// ;
$kernel =~ s/"// ;

print "kernel: $kernel\n";


$rpmversion="k$kernel". "_" . "c$version";

$dir="coda-fs-module-$rpmversion";
$specfile="/usr/src/redhat/SPECS/$dir.spec";
print "tag $tag, rpmversion $rpmversion, rpmrelease $rpmrelease, dir $dir\n";


print "--> specfile $specfile\n";
open(FD, "coda-fs-module.spec.in");
open(SPEC, ">$specfile");
while ( <FD> ) {
    ~ s/\@RPMVERSION\@/$rpmversion/;
    ~ s/\@RPMRELEASE\@/$release/;
    ~ s/\@DIR\@/$dir/;
    ~ s/\@KV\@/$kv/;
    ~ s/\@KERNEL\@/$kernel/;
    ~ s/\@KVCVS\@/$kvcvs/;
    print SPEC $_;
    print $_
}


print "Now run:\n\tcd ..\n\tcp -rp linux-coda $dir\n\ttar zcvf /usr/src/redhat/SOURCES/$dir.tgz $dir\n\trm -rf $dir\n\trpm -ba -v $specfile\n";

# exec(" rpm -ba -v $specfile ");
# @args= ("rpm",  "-ba", "-v", $specfile);
# system(@args);
print "Exit code $?\n";
